AWSTemplateFormatVersion: "2010-09-09"
Description: "Postgres DB for SQL LRS"
Parameters:  
  VPCStackName:
    Description: "Name of VPC Stack"
    Type: String
  SecretStackName:
    Description: "Name of Secrets Manager Stack"
    Type: String

  # Postgres
  # PostgreSQL Storage
  DBSnapshotIdentifier:
    Description: Snapshot identifier to restore DB from. Note that some other params will be ignored if you set this
    Type: String

  DBEngineMode:
    Description: PostgreSQL Engine mode on RDS
    Type: String
    Default: "provisioned"
    AllowedValues:
      - "provisioned"
      - "serverless"
  DBEngineVersion:
    Description: PostgreSQL engine version on RDS
    Type: String
    Default: "14.3"
    AllowedValues:
      - "12.9"
      - "14.3"
  DBInstanceClass:
    Description: For provisioned aurora, the instance class to use
    Type: String
    Default: "db.r5.large"
    AllowedValues:
      - "db.r5.large"
      - "db.r5.xlarge"
      - "db.r5.2xlarge"
      - "db.r5.4xlarge"
      - "db.r5.8xlarge"
      - "db.r5.12xlarge"
      - "db.r5.16xlarge"
      - "db.r5.24xlarge"
  DBInstanceReplica:
    Description: Whether or not to create a second DB instance for use as a read-replica
    Type: String
    AllowedValues:
      - true
      - false
    Default: false
  DBInstancePublic:
    Description: Whether or not to allow public access to DB instances
    Type: String
    AllowedValues:
      - true
      - false
    Default: false
  DBName:
    Description: PG Database name. Ignored if DBSnapshotIdentifier is provided
    Type: String
    Default: "lrsql_marketplace"
  DBBackupRetentionPeriod:
    Description: Retention period for PG backups
    Type: Number
    Default: 1
  DBDeletionProtection:
    Description: Enable/disable deletion protection on the DB
    Type: String
    AllowedValues:
      - true
      - false
    Default: true

Mappings:
  DBClusterParameterGroupMap:
    "12.9":
      Name: default.aurora-postgresql12
    "14.3":
      Name: default.aurora-postgresql14

Conditions:
  DBProvisioned:
    !Equals [!Ref DBEngineMode, "provisioned"]
  DBCreateReadReplica:
    !And [Condition: DBProvisioned, !Equals [!Ref DBInstanceReplica, "true"]]
  DBSnapshotIdentifierProvided:
    !Not [!Equals [!Ref DBSnapshotIdentifier, ""]]

Resources:
  # PostgreSQL Database
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      # Description: Subnet group to allow instance access to db
      DBSubnetGroupDescription: SQL LRS App Instance Subnet Group
      SubnetIds:
        - Fn::ImportValue: 
            !Join [':', [!Ref 'VPCStackName', 'PrivateSubnetOne']]
        - Fn::ImportValue: 
            !Join [':', [!Ref 'VPCStackName', 'PrivateSubnetTwo']]

  DBInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to RDS instances
      VpcId: 
        Fn::ImportValue: !Join [':', [!Ref 'VPCStackName', 'VPCId']]

  DBCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      # Description: PostgreSQL DB Cluster
      Engine: aurora-postgresql
      EngineMode: !Ref DBEngineMode
      EngineVersion: !Ref DBEngineVersion
      DatabaseName: !Ref DBName
      SnapshotIdentifier: !If
        - DBSnapshotIdentifierProvided
        - !Ref DBSnapshotIdentifier
        - !Ref AWS::NoValue
      MasterUsername: !If
        - DBSnapshotIdentifierProvided
        - !Ref AWS::NoValue
        - Fn::ImportValue:
            !Join [":", [!Ref "SecretStackName", "DBMasterUsername"]]
      MasterUserPassword: !If
        - DBSnapshotIdentifierProvided
        - !Ref AWS::NoValue
        - !Sub 
          - "{{resolve:ssm-secure:${DBMasterUserPasswordPath}}}"
          - DBMasterUserPasswordPath:
              Fn::ImportValue: 
                !Join [":", [!Ref "SecretStackName", "DBMasterUserPasswordPath"]]
      BackupRetentionPeriod: !If
        - DBSnapshotIdentifierProvided
        - !Ref AWS::NoValue
        - !Ref DBBackupRetentionPeriod
      DeletionProtection: !Ref DBDeletionProtection
      VpcSecurityGroupIds:
        - !Ref DBInstanceSG
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBClusterParameterGroupName: 
        !FindInMap [DBClusterParameterGroupMap, !Ref "DBEngineVersion", Name]
      EnableCloudwatchLogsExports: !If
        - DBProvisioned
        - [postgresql]
        - !Ref AWS::NoValue

  DBInstance0:
    Condition: DBProvisioned
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      DBClusterIdentifier: !Ref DBCluster
      PubliclyAccessible: !Ref DBInstancePublic
      DBInstanceClass: !Ref DBInstanceClass

  DBInstance1:
    Condition: DBCreateReadReplica
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      DBClusterIdentifier: !Ref DBCluster
      PubliclyAccessible: !Ref DBInstancePublic
      DBInstanceClass: !Ref DBInstanceClass

Outputs:
  DBEndpoint:
    Description: Postgresql db endpoint
    Value: !GetAtt DBCluster.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}:DBEndpoint"
  DBReadOnlyEndpoint:
    Description: Postgresql db readonly endpoint
    Value: !GetAtt DBCluster.ReadEndpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}:DBEndpointRO"
  DBPort:
    Description: Postgresql db port
    Value: !GetAtt DBCluster.Endpoint.Port
    Export:
      Name: !Sub "${AWS::StackName}:DBPort"
  DBInstanceSG:
    Description: Postgresql instance security group
    Value: !Ref DBInstanceSG
    Export:
      Name: !Sub "${AWS::StackName}:DBInstanceSG"
  DBName:
    Description: Name of the DB
    Value: !Ref DBName
    Export:
      Name: !Sub "${AWS::StackName}:DBName"
  DBClusterArn:
    Description: Arn of DB Cluster
    Value: !GetAtt DBCluster.DBClusterArn
    Export:
      Name: !Sub "${AWS::StackName}:DBClusterArn"
  DBClusterIdentifier:
    Description: Identifier of DBCluster
    Value: !Ref DBCluster
    Export:
      Name: !Sub "${AWS::StackName}:DBClusterIdentifier"
