AWSTemplateFormatVersion: "2010-09-09"
Description: "Postgres DB for SQL LRS"
Parameters:
  VPCId:
    Description: "VPC on which to run SQL LRS"
    Type: AWS::EC2::VPC::Id
  DBSubnets:
    Description: Subnets on which to run the DB initialization Lambda function
    Type: List<AWS::EC2::Subnet::Id>

  # Postgres
  # PostgreSQL Storage
  DBSnapshotIdentifier:
    Description: Snapshot identifier to restore DB from. Note that some other params will be ignored if you set this
    Type: String

  DBEngineMode:
    Description: PostgreSQL Engine mode on RDS
    Type: String
    Default: "provisioned"
    AllowedValues:
      - "provisioned"
      - "serverless"
  DBEngineVersion:
    Description: PostgreSQL engine version on RDS
    Type: String
    Default: "14.3"
    AllowedValues:
      - "12.9"
      - "14.3"
  DBInstanceClass:
    Description: For provisioned aurora, the instance class to use
    Type: String
    Default: "db.r5.large"
  DBInstanceReplica:
    Description: Whether or not to create a second DB instance for use as a read-replica
    Type: String
    AllowedValues:
      - true
      - false
    Default: false
  DBInstancePublic:
    Description: Whether or not to allow public access to DB instances
    Type: String
    AllowedValues:
      - true
      - false
    Default: false
  DBName:
    Description: PG Database name. Ignored if DBSnapshotIdentifier is provided
    Type: String
    Default: "lrsql_demo"
  DBMasterUserName:
    Description: Name of admin user
    Type: String
    Default: yetadmin
  DBMasterUserPasswordPath:
    Description: SSM Path to the secret password
    Type: String
    Default: "/lrsql/demo/DB_MASTER_USER_PASSWORD"
  DBMasterUserPasswordVersion:
    Description: SSM version
    Type: Number
    Default: 1
  DBBackupRetentionPeriod:
    Description: Retention period for PG backups
    Type: Number
    Default: 1
  DBDeletionProtection:
    Description: Enable/disable deletion protection on the DB
    Type: String
    AllowedValues:
      - true
      - false
    Default: true

Mappings:
  DBClusterParameterGroupMap:
    "12.9":
      Name: default.aurora-postgresql12
    "14.3":
      Name: default.aurora-postgresql14

Conditions:
  DBProvisioned:
    !Equals [!Ref DBEngineMode, "provisioned"]
  DBCreateReadReplica:
    !And [Condition: DBProvisioned, !Equals [!Ref DBInstanceReplica, "true"]]
  DBSnapshotIdentifierProvided:
    !Not [!Equals [!Ref DBSnapshotIdentifier, ""]]

Resources:
  # PostgreSQL Database
  DBSubnetGroup:
    Description: Subnet group to allow instance access to db
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: SQL LRS App Instance Subnet Group
      SubnetIds:
        !Ref DBSubnets

  DBInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to RDS instances
      VpcId: !Ref VPCId

  DBCluster:
    Description: PostgreSQL DB Cluster
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-postgresql
      EngineMode: !Ref DBEngineMode
      EngineVersion: !Ref DBEngineVersion
      DatabaseName: !Ref DBName
      SnapshotIdentifier: !If
        - DBSnapshotIdentifierProvided
        - !Ref DBSnapshotIdentifier
        - !Ref AWS::NoValue
      MasterUsername: !If
        - DBSnapshotIdentifierProvided
        - !Ref AWS::NoValue
        - !Ref DBMasterUserName
      MasterUserPassword: !If
        - DBSnapshotIdentifierProvided
        - !Ref AWS::NoValue
        - !Sub "{{resolve:ssm-secure:${DBMasterUserPasswordPath}:${DBMasterUserPasswordVersion}}}"
      # DBClusterIdentifier: !Sub '${AWS::StackName}-db'
      BackupRetentionPeriod: !If
        - DBSnapshotIdentifierProvided
        - !Ref AWS::NoValue
        - !Ref DBBackupRetentionPeriod
      DeletionProtection: !Ref DBDeletionProtection
      VpcSecurityGroupIds:
        - !Ref DBInstanceSG
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBClusterParameterGroupName: !FindInMap [DBClusterParameterGroupMap, !Ref "DBEngineVersion", Name]
      EnableCloudwatchLogsExports: !If
        - DBProvisioned
        - [postgresql]
        - !Ref AWS::NoValue

  DBInstance0:
    Condition: DBProvisioned
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      DBClusterIdentifier: !Ref DBCluster
      PubliclyAccessible: !Ref DBInstancePublic
      DBInstanceClass: !Ref DBInstanceClass

  DBInstance1:
    Condition: DBCreateReadReplica
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      DBClusterIdentifier: !Ref DBCluster
      PubliclyAccessible: !Ref DBInstancePublic
      DBInstanceClass: !Ref DBInstanceClass

Outputs:
  DBEndpoint:
    Description: Postgresql db endpoint
    Value: !GetAtt DBCluster.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}:DBEndpoint"
  DBReadOnlyEndpoint:
    Description: Postgresql db readonly endpoint
    Value: !GetAtt DBCluster.ReadEndpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}:DBEndpointRO"
  DBPort:
    Description: Postgresql db port
    Value: !GetAtt DBCluster.Endpoint.Port
    Export:
      Name: !Sub "${AWS::StackName}:DBPort"
  DBInstanceSG:
    Description: Postgresql instance security group
    Value: !Ref DBInstanceSG
    Export:
      Name: !Sub "${AWS::StackName}:DBInstanceSG"
  DBName:
    Description: Name of the DB
    Value: !Ref DBName
    Export:
      Name: !Sub "${AWS::StackName}:DBName"
  DBMasterUserName:
    Description: DB Master username
    Value: !Ref DBMasterUserName
    Export:
      Name: !Sub "${AWS::StackName}:DBMasterUserName"
  DBMasterUserPasswordPath:
    Description: Path to the DB Master password
    Value: !Ref DBMasterUserPasswordPath
    Export:
      Name: !Sub "${AWS::StackName}:DBMasterUserPasswordPath"
  DBMasterUserPasswordVersion:
    Description: Path to the DB Master password
    Value: !Ref DBMasterUserPasswordVersion
    Export:
      Name: !Sub "${AWS::StackName}:DBMasterUserPasswordVersion"
