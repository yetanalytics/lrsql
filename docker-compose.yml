# Runs SQL LRS with Postgres - Provided for demonstration purposes only!
# To run: docker compose up
# See the Docker Compose docs for more info: https://docs.docker.com/compose/
services:
  db:
    image: postgres
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: lrsql_user
      POSTGRES_PASSWORD: lrsql_password
      POSTGRES_DB: lrsql_db
  lrs_1:
    # build: . # switch to this for active dev
    image: yetanalytics/lrsql:latest
    command:
      - /lrsql/bin/run_postgres.sh
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      LRSQL_API_KEY_DEFAULT: my_key
      LRSQL_API_SECRET_DEFAULT: my_secret
      LRSQL_ADMIN_USER_DEFAULT: my_username
      LRSQL_ADMIN_PASS_DEFAULT: my_password
      LRSQL_ALLOW_ALL_ORIGINS: "true"
      LRSQL_DB_HOST: db
      LRSQL_DB_NAME: lrsql_db
      LRSQL_DB_USER: lrsql_user
      LRSQL_DB_PASSWORD: lrsql_password
      LRSQL_JWT_COMMON_SECRET: sandwich
      # If Postgres is too slow to start, increase this
      LRSQL_POOL_INITIALIZATION_FAIL_TIMEOUT: 10000
  lrs_2:
    # build: . # switch to this for active dev
    image: yetanalytics/lrsql:latest
    command:
      - /lrsql/bin/run_postgres.sh
    ports:
      - "8081:8080"
    depends_on:
      - db
    environment:
      LRSQL_API_KEY_DEFAULT: my_key
      LRSQL_API_SECRET_DEFAULT: my_secret
      LRSQL_ADMIN_USER_DEFAULT: my_username
      LRSQL_ADMIN_PASS_DEFAULT: my_password
      LRSQL_ALLOW_ALL_ORIGINS: "true"
      LRSQL_DB_HOST: db
      LRSQL_DB_NAME: lrsql_db
      LRSQL_DB_USER: lrsql_user
      LRSQL_DB_PASSWORD: lrsql_password
      LRSQL_JWT_COMMON_SECRET: sandwich
      # If Postgres is too slow to start, increase this
      LRSQL_POOL_INITIALIZATION_FAIL_TIMEOUT: 10000
  lb:
    build: dev-resources/lb
    ports:
      - "8083:8083"
    depends_on:
      - lrs_1
      - lrs_2
