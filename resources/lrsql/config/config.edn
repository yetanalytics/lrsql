{:database
 #profile
  {;; Test/Dev
   :test-sqlite     {:db-type "sqlite"
                     :db-name "example.sqlite.db"}
   :test-sqlite-mem {:db-type "sqlite"
                     :db-name ":memory:"}
   :test-postgres   {:db-type         "postgres"
                     :db-name         "lrsql_pg"
                     :db-host         "0.0.0.0"
                     :db-port         5432
                     :db-user         "lrsql_user"
                     :db-password     "swordfish"
                     ;; Schemas are commented out for testing (since all tests
                     ;; happen in the default `public` schema). We can uncomment
                     ;; these properties for manual schema testing.
                     ;; :db-schema     "lrsql"
                     ;; :db-properties "currentSchema=lrsql"

                     ;; Testing Only! Specify the version used with testcontainers
                     :test-db-version #or [#env LRSQL_TEST_DB_VERSION "11"]}
   :test-oidc       {:db-type "sqlite"
                     :db-name ":memory:"}

   ;; Production
   :prod-sqlite-mem #include "prod/sqlite_mem/database.edn"
   :prod-sqlite     #include "prod/sqlite/database.edn"
   :prod-postgres   #include "prod/postgres/database.edn"}
 :connection
 #profile
  {;; Test/Dev
   :test-sqlite     #include "test/default/connection.edn"
   :test-sqlite-mem #include "test/default/connection.edn"
   :test-postgres   #include "test/postgres/connection.edn"
   :test-oidc       #include "test/default/connection.edn"
   ;; Production
   :prod-sqlite     #include "prod/default/connection.edn"
   :prod-sqlite-mem #include "prod/default/connection.edn"
   :prod-postgres   #include "prod/postgres/connection.edn"}
 :tuning
 #profile
  {; Test/Dev
   :test-sqlite     #include "test/default/tuning.edn"
   :test-sqlite-mem #include "test/default/tuning.edn"
   :test-postgres   #include "test/postgres/tuning.edn"
   :test-oidc       #include "test/default/tuning.edn"
   ;; Production
   :prod-sqlite     #include "prod/default/tuning.edn"
   :prod-sqlite-mem #include "prod/default/tuning.edn"
   :prod-postgres   #include "prod/postgres/tuning.edn"}
 :lrs
 #profile
  {;; Test/Dev
   :test-sqlite     #include "test/default/lrs.edn"
   :test-sqlite-mem #include "test/default/lrs.edn"
   :test-postgres   #include "test/default/lrs.edn"
   :test-oidc       #include "test/oidc/lrs.edn"
   ;; Production
   :prod-sqlite     #include "prod/default/lrs.edn"
   :prod-sqlite-mem #include "prod/default/lrs.edn"
   :prod-postgres   #include "prod/default/lrs.edn"}
 :webserver
 #profile
  {;; Test/Dev
   :test-sqlite      #include "test/default/webserver.edn"
   :test-sqlite-mem  #include "test/default/webserver.edn"
   :test-postgres    #include "test/default/webserver.edn"
   :test-oidc        #include "test/oidc/webserver.edn"
  ;; Production
   :prod-sqlite      #include "prod/default/webserver.edn"
   :prod-sqlite-mem  #include "prod/default/webserver.edn"
   :prod-postgres    #include "prod/default/webserver.edn"}
 ;; A user-provided JSON file for merge-with merge into this map
 :user-config-json #or [#env LRSQL_USER_CONFIG_JSON "config/lrsql.json"]
 ;; Set logging params on system start
 :logger
 {:log-level #or [#env LRSQL_LOG_LEVEL nil]}}
